#!/usr/bin/env bash

set -e

PACKAGES='git curl build-essential vim zsh tmux snapd libssl-dev libpam-gnome-keyring xclip exa'
SNAPPACKAGES='insomnia' #'discord insomnia gimp obs-studio'
PROGRAMS='docker'

cli_help() {
  echo "
Command: system [appearance | programs | all]
Usage:
  appearance -> setup icons and theme
  browser    -> install browser (Microsoft Edge)
  list       -> list programs to be installed by the 'programs' command
  programs   -> donwload and setup programs
  all        -> run all commands above"
  exit 1
}

icon_theme_setup() {
  if [[ -z $(ls /usr/share/icons | grep "candy-icons") ]]; then
  wget 'https://github.com/EliverLara/candy-icons/archive/refs/heads/master.zip' -O /tmp/candy-icons.zip
    sudo unzip /tmp/candy-icons.zip -d /usr/share/icons/
  fi
  gsettings set org.gnome.desktop.interface icon-theme candy-icons-master
}

system_theme_setup() {
  if [[ -z $(ls /usr/share/themes | grep -i "sweet") ]]; then
  wget 'https://github.com/EliverLara/Sweet/releases/download/v3.0/Sweet-Dark-v40.zip' -O /tmp/sweet-theme.zip
    sudo unzip /tmp/sweet-theme.zip -d /usr/share/themes/
  fi
	gsettings set org.gnome.desktop.interface gtk-theme 'Sweet-Dark-v40'
	gsettings set org.gnome.desktop.wm.preferences theme 'Sweet-Dark-v40'
}

# Download Hack font
fonts_download() {
  if [[ -z $(ls /usr/share/fonts/ttf | grep -i "hack") ]]; then
    sudo mkdir -p /usr/share/fonts/ttf
  wget 'https://github.com/source-foundry/Hack/releases/download/v3.003/Hack-v3.003-ttf.zip' -O /tmp/hack-font.zip
    sudo unzip /tmp/hack-font.zip -d /tmp/hack-font/
    sudo cp -t /usr/share/fonts/ttf/ /tmp/hack-font/ttf/*
  fi

  if [[ -z $(ls /usr/share/fonts | grep -i "firacode") ]]; then
    sudo mkdir -p /usr/share/fonts
    wget --output-document=/tmp/firacode.zip https://github.com/tonsky/FiraCode/releases/download/6.2/Fira_Code_v6.2.zip
    sudo unzip /tmp/firacode.zip -d /tmp/firacode/
    sudo cp -t /usr/share/fonts/ /tmp/firacode/ttf/*
  fi

  if [[ -z $(ls /usr/share/fonts | grep -i "nerdfontssymbolsonly") ]]; then
    sudo mkdir -p /usr/share/fonts
    wget --output-document=/tmp/NerdFontsSymbolsOnly.zip https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/NerdFontsSymbolsOnly.zip
    sudo unzip /tmp/NerdFontsSymbolsOnly.zip -d /tmp/NerdFontsSymbolsOnly
    sudo cp -t /usr/share/fonts/ /tmp/NerdFontsSymbolsOnly/SymbolsNerdFontMono-Regular.ttf /tmp/NerdFontsSymbolsOnly/SymbolsNerdFont-Regular.ttf
  fi

  fc-cache -f -v
}

fonts_setup() {
  fonts_download
	gsettings set org.gnome.desktop.interface font-name 'Hack Regular 12'
}

dock_setup() {
	gsettings set org.gnome.shell.extensions.dash-to-dock dock-fixed 'false'
	gsettings set org.gnome.shell.extensions.dash-to-dock autohide 'true'
	gsettings set org.gnome.shell.extensions.dash-to-dock intellihide 'true'
	gsettings set org.gnome.shell.extensions.dash-to-dock extend-height 'false'
}

setup_apprearance() {
  icon_theme_setup
  system_theme_setup
  fonts_setup
  dock_setup
}

install_browser() {
  BROWSER="Microsoft Edge"

  wget -O - https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
  sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
  sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
  sudo rm microsoft.gpg

  sudo apt update && sudo apt install microsoft-edge-stable
}

docker_install() {
	echo "Installing docker"
	sudo apt install -y ca-certificates curl gnupg lsb-release
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor --batch --yes -o /usr/share/keyrings/docker-archive-keyring.gpg
	echo \
	  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
	  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	sudo apt update
	sudo apt install -y docker-ce docker-ce-cli containerd.io
	sudo groupadd -f docker
	sudo usermod -aG docker $USER
  echo "Docker installed"

}

tmux_setup() {
  ln -s -T /srv/dotfiles/tmux/tmux.conf ~/.tmux.conf || true
}

setup_programs() {
  sudo apt install -y $PACKAGES
  sudo snap install $SNAPPACKAGES

  docker_install

  tmux_setup
}

list_programs() {
  echo "APT packages to be installed:"
  echo $PACKAGES
  echo
  echo "Snap packages to be installed:"
  echo $SNAPPACKAGES
  echo
  echo "Other programs:"
  echo $PROGRAMS
}

[ ! -n "$1" ] && cli_help

case "$1" in
  appearance)
    setup_apprearance
    ;;
  browser)
    install_browser
    ;;
  programs)
    setup_programs
    ;;
  docker)
    docker_install
    ;;
  tmux)
    tmux_setup
    ;;
  list)
    list_programs
    ;;
  all)
    setup_apprearance
    install_browser
    setup_programs
    ;;
  *)
    cli_help
    ;;
esac
